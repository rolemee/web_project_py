import{ag as e,a4 as a,a2 as l,a5 as o,X as n,V as t,am as i,W as u,U as s,l as d,Y as r,an as c,Z as b,J as m,I as v,d as p,a9 as h,u as k,o as x,a as f,w as g,p as y,q as C,ao as L,e as I,c as B,A as F,n as G,g as S,K as E,C as z,y as V,f as w,r as _,_ as A,ad as D,$ as N,a1 as O,h as $,af as U}from"./index.10862972.js";import{c as j}from"./index.8b11fa54.js";import{U as R,d as q}from"./event.4982e83d.js";const J={modelValue:{type:Array,default:()=>[]},disabled:Boolean,min:{type:Number,default:void 0},max:{type:Number,default:void 0},size:e,id:{type:String,default:void 0},label:{type:String,default:void 0},fill:{type:String,default:void 0},textColor:{type:String,default:void 0},tag:{type:String,default:"div"},validateEvent:{type:Boolean,default:!0}},K={modelValue:{type:[Number,String,Boolean],default:()=>{}},label:{type:[String,Boolean,Number,Object]},indeterminate:Boolean,disabled:Boolean,checked:Boolean,name:{type:String,default:void 0},trueLabel:{type:[String,Number],default:void 0},falseLabel:{type:[String,Number],default:void 0},id:{type:String,default:void 0},controls:{type:String,default:void 0},border:Boolean,size:e,tabindex:[String,Number],validateEvent:{type:Boolean,default:!0}},M=()=>{const e=a(l,{}),t=a(o,{}),i=a("CheckboxGroup",{}),u=n((()=>i&&"ElCheckboxGroup"===(null==i?void 0:i.name))),s=n((()=>t.size));return{isGroup:u,checkboxGroup:i,elForm:e,elFormItemSize:s,elFormItem:t}},W=(e,{model:a,isLimitExceeded:l,hasOwnLabel:o,isDisabled:t,isLabeledByFormItem:i})=>{const{elFormItem:u,checkboxGroup:s}=M(),{emit:d}=m();function r(a){var l,o;return a===e.trueLabel||!0===a?null==(l=e.trueLabel)||l:null!=(o=e.falseLabel)&&o}const c=n((()=>{var a;return(null==(a=s.validateEvent)?void 0:a.value)||e.validateEvent}));return b((()=>e.modelValue),(()=>{var e;c.value&&(null==(e=null==u?void 0:u.validate)||e.call(u,"change").catch((e=>q())))})),{handleChange:function(e){if(l.value)return;const a=e.target;d("change",r(a.checked),e)},onClickRoot:async function(n){l.value||o.value||t.value||!i.value||(a.value=r([!1,e.falseLabel].includes(a.value)),await v(),function(e,a){d("change",r(e),a)}(a.value,n))}}},X={[R]:e=>t(e)||i(e)||u(e),change:e=>t(e)||i(e)||u(e)},Y={[R]:e=>s(e),change:e=>s(e)},Z=(e,a)=>{const{model:l,isGroup:o,isLimitExceeded:t,elFormItem:i}=(e=>{const a=d(!1),{emit:l}=m(),{isGroup:o,checkboxGroup:t,elFormItem:i}=M(),u=d(!1);return{model:n({get(){var l,n;return o.value?null==(l=t.modelValue)?void 0:l.value:null!=(n=e.modelValue)?n:a.value},set(e){var n;o.value&&Array.isArray(e)?(u.value=void 0!==t.max&&e.length>t.max.value,!1===u.value&&(null==(n=null==t?void 0:t.changeEvent)||n.call(t,e))):(l(R,e),a.value=e)}}),isGroup:o,isLimitExceeded:u,elFormItem:i}})(e),{focus:u,size:s,isChecked:b,checkboxSize:v,hasOwnLabel:p}=((e,a,{model:l})=>{const{isGroup:o,checkboxGroup:t}=M(),i=d(!1),u=r(null==t?void 0:t.checkboxGroupSize,{prop:!0});return{isChecked:n((()=>{const a=l.value;return"[object Boolean]"===c(a)?a:Array.isArray(a)?a.includes(e.label):null!=a?a===e.trueLabel:!!a})),focus:i,size:u,checkboxSize:r(n((()=>{var e;return o.value?null==(e=null==t?void 0:t.checkboxGroupSize)?void 0:e.value:void 0}))),hasOwnLabel:n((()=>!(!a.default&&!e.label)))}})(e,a,{model:l}),{isDisabled:h}=((e,{model:a,isChecked:l})=>{const{elForm:o,isGroup:t,checkboxGroup:i}=M(),u=n((()=>{var e,o;const n=null==(e=i.max)?void 0:e.value,t=null==(o=i.min)?void 0:o.value;return!(!n&&!t)&&a.value.length>=n&&!l.value||a.value.length<=t&&l.value}));return{isDisabled:n((()=>{var a,l;const n=e.disabled||(null==o?void 0:o.disabled);return null!=(l=t.value?(null==(a=i.disabled)?void 0:a.value)||n||u.value:n)&&l})),isLimitDisabled:u}})(e,{model:l,isChecked:b}),{inputId:k,isLabeledByFormItem:x}=j(e,{formItemContext:i,disableIdGeneration:p,disableIdManagement:o}),{handleChange:f,onClickRoot:g}=W(e,{model:l,isLimitExceeded:t,hasOwnLabel:p,isDisabled:h,isLabeledByFormItem:x});return((e,{model:a})=>{e.checked&&(Array.isArray(a.value)&&!a.value.includes(e.label)?a.value.push(e.label):a.value=e.trueLabel||!0)})(e,{model:l}),{elFormItem:i,inputId:k,isLabeledByFormItem:x,isChecked:b,isDisabled:h,isGroup:o,checkboxSize:v,hasOwnLabel:p,model:l,handleChange:f,onClickRoot:g,focus:u,size:s}},H=["tabindex","role","aria-checked"],P=["id","aria-hidden","name","tabindex","disabled","true-value","false-value"],Q=["id","aria-hidden","disabled","value","name","tabindex"];var T=A(p({name:"ElCheckbox",props:K,emits:X,setup(e){const a=e,l=h(),{inputId:o,isLabeledByFormItem:n,isChecked:t,isDisabled:i,checkboxSize:u,hasOwnLabel:s,model:d,handleChange:r,onClickRoot:c,focus:b}=Z(a,l),m=k("checkbox");return(e,a)=>(x(),f(_(!I(s)&&I(n)?"span":"label"),{class:G([I(m).b(),I(m).m(I(u)),I(m).is("disabled",I(i)),I(m).is("bordered",e.border),I(m).is("checked",I(t))]),"aria-controls":e.indeterminate?e.controls:null,onClick:I(c)},{default:g((()=>[y("span",{class:G([I(m).e("input"),I(m).is("disabled",I(i)),I(m).is("checked",I(t)),I(m).is("indeterminate",e.indeterminate),I(m).is("focus",I(b))]),tabindex:e.indeterminate?0:void 0,role:e.indeterminate?"checkbox":void 0,"aria-checked":e.indeterminate?"mixed":void 0},[e.trueLabel||e.falseLabel?C((x(),B("input",{key:0,id:I(o),"onUpdate:modelValue":a[0]||(a[0]=e=>F(d)?d.value=e:null),class:G(I(m).e("original")),type:"checkbox","aria-hidden":e.indeterminate?"true":"false",name:e.name,tabindex:e.tabindex,disabled:I(i),"true-value":e.trueLabel,"false-value":e.falseLabel,onChange:a[1]||(a[1]=(...e)=>I(r)&&I(r)(...e)),onFocus:a[2]||(a[2]=e=>b.value=!0),onBlur:a[3]||(a[3]=e=>b.value=!1)},null,42,P)),[[L,I(d)]]):C((x(),B("input",{key:1,id:I(o),"onUpdate:modelValue":a[4]||(a[4]=e=>F(d)?d.value=e:null),class:G(I(m).e("original")),type:"checkbox","aria-hidden":e.indeterminate?"true":"false",disabled:I(i),value:e.label,name:e.name,tabindex:e.tabindex,onChange:a[5]||(a[5]=(...e)=>I(r)&&I(r)(...e)),onFocus:a[6]||(a[6]=e=>b.value=!0),onBlur:a[7]||(a[7]=e=>b.value=!1)},null,42,Q)),[[L,I(d)]]),y("span",{class:G(I(m).e("inner"))},null,2)],10,H),I(s)?(x(),B("span",{key:0,class:G(I(m).e("label"))},[S(e.$slots,"default"),e.$slots.default?w("v-if",!0):(x(),B(E,{key:0},[z(V(e.label),1)],64))],2)):w("v-if",!0)])),_:3},8,["class","aria-controls","onClick"]))}}),[["__file","/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox.vue"]]);const ee=["name","tabindex","disabled","true-value","false-value"],ae=["name","tabindex","disabled","value"];var le=A(p({name:"ElCheckboxButton",props:K,emits:X,setup(e){const a=e,l=h(),{focus:o,isChecked:t,isDisabled:i,size:u,model:s,handleChange:d}=Z(a,l),{checkboxGroup:r}=M(),c=k("checkbox"),b=n((()=>{var e,a,l,o;const n=null!=(a=null==(e=null==r?void 0:r.fill)?void 0:e.value)?a:"";return{backgroundColor:n,borderColor:n,color:null!=(o=null==(l=null==r?void 0:r.textColor)?void 0:l.value)?o:"",boxShadow:n?`-1px 0 0 0 ${n}`:void 0}}));return(e,a)=>(x(),B("label",{class:G([I(c).b("button"),I(c).bm("button",I(u)),I(c).is("disabled",I(i)),I(c).is("checked",I(t)),I(c).is("focus",I(o))])},[e.trueLabel||e.falseLabel?C((x(),B("input",{key:0,"onUpdate:modelValue":a[0]||(a[0]=e=>F(s)?s.value=e:null),class:G(I(c).be("button","original")),type:"checkbox",name:e.name,tabindex:e.tabindex,disabled:I(i),"true-value":e.trueLabel,"false-value":e.falseLabel,onChange:a[1]||(a[1]=(...e)=>I(d)&&I(d)(...e)),onFocus:a[2]||(a[2]=e=>o.value=!0),onBlur:a[3]||(a[3]=e=>o.value=!1)},null,42,ee)),[[L,I(s)]]):C((x(),B("input",{key:1,"onUpdate:modelValue":a[4]||(a[4]=e=>F(s)?s.value=e:null),class:G(I(c).be("button","original")),type:"checkbox",name:e.name,tabindex:e.tabindex,disabled:I(i),value:e.label,onChange:a[5]||(a[5]=(...e)=>I(d)&&I(d)(...e)),onFocus:a[6]||(a[6]=e=>o.value=!0),onBlur:a[7]||(a[7]=e=>o.value=!1)},null,42,ae)),[[L,I(s)]]),e.$slots.default||e.label?(x(),B("span",{key:2,class:G(I(c).be("button","inner")),style:D(I(t)?I(b):void 0)},[S(e.$slots,"default",{},(()=>[z(V(e.label),1)]))],6)):w("v-if",!0)],2))}}),[["__file","/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-button.vue"]]);var oe=A(p({name:"ElCheckboxGroup",props:J,emits:Y,setup(e,{emit:a}){const l=e,{elFormItem:o}=M(),{groupId:t,isLabeledByFormItem:i}=((e,{elFormItem:a})=>{const{inputId:l,isLabeledByFormItem:o}=j(e,{formItemContext:a});return{isLabeledByFormItem:o,groupId:l}})(l,{elFormItem:o}),u=r(),s=k("checkbox"),d=e=>{a(R,e),v((()=>{a("change",e)}))},c=n({get:()=>l.modelValue,set(e){d(e)}});return N("CheckboxGroup",{name:"ElCheckboxGroup",modelValue:c,...O(l),checkboxGroupSize:u,changeEvent:d}),b((()=>l.modelValue),(()=>{var e;l.validateEvent&&(null==(e=o.validate)||e.call(o,"change").catch((e=>q())))})),(e,a)=>(x(),f(_(e.tag),{id:I(t),class:G(I(s).b("group")),role:"group","aria-label":I(i)?void 0:e.label||"checkbox-group","aria-labelledby":I(i)?I(o).labelId:void 0},{default:g((()=>[S(e.$slots,"default")])),_:3},8,["id","class","aria-label","aria-labelledby"]))}}),[["__file","/home/runner/work/element-plus/element-plus/packages/components/checkbox/src/checkbox-group.vue"]]);const ne=$(T,{CheckboxButton:le,CheckboxGroup:oe});U(le),U(oe);export{ne as E};
